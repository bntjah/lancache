server {
    #listen 80 deferred default;
    server_name steam .lancache.steamcontent.com .client-download.steampowered.com .content1.steampowered.com .content2.steampowered.com .content3.steampowered.com .content4.steampowered.com .content5.steampowered.com .content6.steampowered.com .content7.steampowered.com .content8.steampowered.com .cs.steampowered.com .clientconfig.akamai.steamtransparent.com .hsar.steampowered.com.edgesuite.net .steamcontent.com .edgecast.steamstatic.com .steampipe.akamaized.net .steam.apac.qtlglb.com .steam.apac.qtlglb.com.mwcloudcdn.com .cdn1-sea1.valve.net .cdn2-sea1.valve.net .steamcdn-a.akamaihd.net .media4.steampowered.com .media2.steampowered.com .clientconfig.akamai.steamstatic.com;
    #server_name steam _;
    access_log /srv/lancache/logs/Access/steam.log main;
    access_log /srv/lancache/logs/Keys/steam.log keys_uri;
    error_log /srv/lancache/logs/Errors/steam.log;
    access_log /srv/lancache/logs/AccessKeys/steam.log new_keys_uri;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Steam Node
    include lancache/resolver;
    proxy_temp_path /srv/lancache/data/steam/tmp/ 1 2;
    location /depot/ {
        # Currently Steam uses a default expires of now, but
        # does set Cache-Control when required so just ignore
        # Expires header for now.
        #proxy_bind lc-host-proxybind;
        proxy_ignore_headers Expires;
        # Steam sometimes passes security parameters on the URI
        # so we cache based on just the URI excluding the query
        # string
        proxy_cache_key "$server_name$uri";
        # Use Steam cache
        proxy_cache steam;
        # proxy_read_timeout 300;
        include lancache/proxy-cache;
    }
    # Store results from /serverlist/ request as they should allow
    # us to determine if we are missing an DNS entries for content
    # servers
    location /serverlist/ {
        #proxy_bind lc-host-proxybind;
        proxy_store /srv/lancache/data/steam$uri/servers.txt;
        #proxy_store_access user:rw group:rw all:r;
        include lancache/proxy-base;
    }
#    location / {
#        include lancache/cache-key-default;
#        #proxy_bind lc-host-proxybind;
#        proxy_cache other;
#        include lancache/proxy-cache;
#    }
location / {
    set $no_cache 0;
    #set $no_cache "";
    if ($request_uri ~* "(/server-status)") {
        set $no_cache 1;
    }
    proxy_no_cache $no_cache;
    proxy_cache_bypass $no_cache;
    include lancache/cache-key-default;
    #proxy_bind lc-host-proxybind;
    proxy_cache other;
    include lancache/proxy-cache;
}
}
